apiVersion: apps/v1
kind: Deployment
metadata:
  name: qrcodebakery
  labels:
    app: qrcodebakery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qrcodebakery
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: qrcodebakery
    spec:
      containers:
      - name: qrcodebakery
        image: <IMAGE>
        ports:
        - containerPort: 5555
        resources:
          requests:
            cpu: 200m
          limits:
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: qrcodebakery-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: qrcodebakery
    #run: qrcodebakery
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 5555
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: qrcodebakery-certificate
spec:
  domains:
    - qrcodebakery.com
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: ingress-security-config
spec:
  sslPolicy: gke-ingress-ssl-policy-https
  redirectToHttps:
    enabled: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qrcodebakery-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.allow-http: "false"
    networking.gke.io/v1beta1.FrontendConfig: ingress-security-config
    networking.gke.io/managed-certificates: qrcodebakery-certificate
spec:
  rules:
  - host: "qrcodebakery.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: qrcodebakery-service
            port:
              number: 80
  #tls:
  #    - hosts:
  #    - qrcodebakery.com
  #      secretName: qrcodebakery-tls
